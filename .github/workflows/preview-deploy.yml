name: Preview - Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, closed]
    branches: [main]

concurrency:
  group: preview-${{ github.event.pull_request.number }}
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write

jobs:
  determine-actions:
    name: Determine actions
    runs-on: ubuntu-latest
    outputs:
      should-apply: ${{ steps.check.outputs.should-apply }}
      should-destroy: ${{ steps.check.outputs.should-destroy }}
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine actions
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/preview-determine-actions.js');
            await scripts({ github, context, core });
      - name: Debug
        run: |
          echo "should-deploy: ${{ steps.check.outputs.should-deploy }}"
          echo "should-apply: ${{ steps.check.outputs.should-apply }}"
          echo "should-destroy: ${{ steps.check.outputs.should-destroy }}"

  deploy:
    name: Deploy preview
    runs-on: ubuntu-latest
    needs: determine-actions
    if: fromJSON(needs.determine-actions.outputs.should-deploy)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Report state (deploying)
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'deploying'
            });

      - name: Debug
        run: |
          echo "gh_owner: ${{ github.repository_owner }}"
          echo "gh_repo_name: ${{ github.event.repository.name }}"
          echo "pr_number: ${{ github.event.pull_request.number }}"

      - name: Apply Tofu plan
        uses: dflook/tofu-apply@v2.1.0
        with:
          path: ./infrastructure/envs/preview
          label: preview
          auto_approve: true
          workspace: pr-${{ github.event.pull_request.number }}
          backend_config: |
            access_key=${{ secrets.SCW_ACCESS_KEY }}
            secret_key=${{ secrets.SCW_SECRET_KEY }}
            bucket=${{ github.event.repository.name }}-tofu-state
          variables: |
            gh_pat_token = "${{ secrets.GH_PAT_TOKEN }}"
            gh_owner = "${{ github.repository_owner }}"
            gh_repo_name = "${{ github.event.repository.name }}"
            pr_number = "${{ github.event.pull_request.number }}"

      - name: Deploy application
        run: |
          echo "Deploying application"

      - name: Report state (deployed)
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'deployed'
            });

      - name: Report state (failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'failure'
            });

  cleanup:
    name: Clean up preview
    runs-on: ubuntu-latest
    needs: determine-actions
    if: fromJSON(needs.determine-actions.outputs.should-destroy)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Report state (destroying)
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'destroying'
            });

      - name: Destroy Tofu plan
        if: fromJSON(needs.determine-actions.outputs.should-apply)
        uses: dflook/tofu-destroy@v2.1.0
        with:
          path: ./infrastructure/envs/preview
          workspace: pr-${{ github.event.pull_request.number }}
          backend_config: |
            access_key=${{ secrets.SCW_ACCESS_KEY }}
            secret_key=${{ secrets.SCW_SECRET_KEY }}
            bucket=${{ github.event.repository.name }}-tofu-state
          variables: |
            gh_pat_token = "${{ secrets.GH_PAT_TOKEN }}"
            gh_owner = "${{ github.repository_owner }}"
            gh_repo_name = "${{ github.event.repository.name }}"
            pr_number = "${{ github.event.pull_request.number }}"

      - name: Report state (destroyed)
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'destroyed'
            });

      - name: Report state (failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const scripts = require('./.github/scripts/report-state.js');
            await scripts({ github, context, core }, {
              deploy: 'failure'
            });
